from time import sleep
from unittest import result
from elasticsearch import Elasticsearch
from pprint import pprint

# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "kbx5fV0YGv1NWobuS2O7GNiS"

# Found in the 'Manage Deployment' page
CLOUD_ID = "Proyecto1:dXMtY2VudHJhbDEuZ2NwLmNsb3VkLmVzLmlvOjQ0MyRkM2IwZmI0YTA5YjE0MTEwOTAxYTkzYTA0YzcwYzgyYyRhM2ZkMzFkNzYxZGE0YzM3ODM1YTViNWJjZDZjMDJhMA=="

# Create the client instance
client = Elasticsearch(
    cloud_id=CLOUD_ID,
    basic_auth=("elastic", ELASTIC_PASSWORD)
)

jobs_index = "test"

# Successful response!
client.info()
# {'name': 'instance-0000000000', 'cluster_name': ...}

#test_resp = client.get(index=jobs_index, id="4LCZ1IMBqftKK022HSH9")
print("\n\n AQUI COMIENZA \n\n")

def new_document(client, id, doc):
    print("SE CAE AQUI")
    print(type(doc['_source']))
    modified_doc = doc['_source']
    modified_doc['mappings']['jobs']['properties']['status'] = "In-Progress"
    return modified_doc

while (True):
    client.indices.refresh(index=jobs_index)
    resp = client.search(index=jobs_index, query={"match_all": {}})
    print("\n Got %d Hits:" % resp['hits']['total']['value'])
    for hit in resp['hits']['hits']:
        print("\nIndex: ", hit["_index"])
        print("ID: ", hit["_id"])
        job = client.get(index=jobs_index, id=hit["_id"])
        print(job)
        if (job['_source']['mappings']['jobs']['properties']['status'] == "new"):
            print("LLEGA HASTA AQUI")
            job = new_document(client, hit["_id"], job)
            print(type(job))
            print("O AQUI")
            result = client.update(index=jobs_index, id=hit["_id"], doc=job)
            print("O HASTA AQUI")
            print("\n",result['result'],"\n")

    sleep(3)

